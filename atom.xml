<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>YanYi&#39;s Blog</title>
  
  <subtitle>猴子每天都会爬树摘果子，猴子不再爬树了，可能是树上没果子了，也可能猴子已经不再是猴子。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-08-02T01:00:36.290Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>YanYi</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>iOS组件化之路-同名文件带来的坑</title>
    <link href="http://yoursite.com/2018/08/01/%E7%BB%84%E4%BB%B6%E5%8C%96%E5%88%B0%E7%9A%84%E5%9D%91/iOS%E5%B7%A5%E7%A8%8B%E5%A4%9Atarget%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2018/08/01/组件化到的坑/iOS工程多target问题/</id>
    <published>2018-07-31T16:00:00.000Z</published>
    <updated>2018-08-02T01:00:36.290Z</updated>
    
    <content type="html"><![CDATA[<h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><h3 id="方案-一-最优雅的方式：功能一样的同名文件组件化"><a href="#方案-一-最优雅的方式：功能一样的同名文件组件化" class="headerlink" title="方案 一  最优雅的方式：功能一样的同名文件组件化"></a>方案 一  最优雅的方式：功能一样的同名文件组件化</h3><p>  这种方式应该是这个问题最优雅的解决方案了，在开发过程中要尽可能的避免项目中存在同名文件，他们往往是实现完全一样的功能的代码，既然我们都已经组件化了，那么同名文件自然而然的要想到做组件化处理，无需放在多个不一样的target中，只需要将这个共同的功能作为依赖库包含在不同的模块中即可。</p><h3 id="方案-二-取巧的方案：映射"><a href="#方案-二-取巧的方案：映射" class="headerlink" title="方案 二  取巧的方案：映射"></a>方案 二  取巧的方案：映射</h3><p>  这种情况仅仅在你不得不使用一个单利，但是你又暂时无法将某个同样的功能从两个target中剥离出来（比如微信支付），那么将会在两个target中共同存在相同的微信SDK，此时支付等功能的回调肯定需要依赖一个中间对象，那么就必须保证无论你是在同一个target下，还是多个target下，都必须是同一个实例对象。而你在不同的target下的同名文件，即使你这个类是单例，实例化对象的时候也不可能返回同一个实例对象，那么此时，只能一方移除该文件，不在引用该类的头文件，使用映射的方式，以字符串生成类名来实例出某个特定的单利（前提是你的单利实例化方法一定要写的够完善），此方案仅仅适合作为临时取巧，仅仅是一种解决方案。</p>]]></content>
    
    <summary type="html">
    
      场景描述：在公司的开发过程中，我们采用了组件化的方式，将代码按照相关功能进行剥离，同时对某些相应的模块独立到一个单独的工程里开发，两个工程里面均独立包含第三方支付功能，那么此时，两个工程里面都包含同样的第三方支付SDK。当代码实施组件化之后，他们可以存在于同一个工程里面，此时可能会引起一些问题，对这些&quot;微信&quot;、&quot;支付宝&quot;等第三方SDK在APP delegate中的回调，我们通常会自己实现一些起中间处理的helper类或者单利来方便全局调用。在不同target下的单利，实例化之后，虽然是同名类，但是实例化出来却不是同一个对象，这导致主工程里面的delegate无法令除主工程以外的target下的回调生效，这是我在处理微信支付的过程中所遇到的问题。
    
    </summary>
    
      <category term="编程" scheme="http://yoursite.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="iOS开发" scheme="http://yoursite.com/tags/iOS%E5%BC%80%E5%8F%91/"/>
    
      <category term="坑" scheme="http://yoursite.com/tags/%E5%9D%91/"/>
    
      <category term="组件化" scheme="http://yoursite.com/tags/%E7%BB%84%E4%BB%B6%E5%8C%96/"/>
    
      <category term="多target" scheme="http://yoursite.com/tags/%E5%A4%9Atarget/"/>
    
  </entry>
  
  <entry>
    <title>英语美句</title>
    <link href="http://yoursite.com/2018/07/29/EnglishStudy/English%20Sentences/"/>
    <id>http://yoursite.com/2018/07/29/EnglishStudy/English Sentences/</id>
    <published>2018-07-28T16:00:00.000Z</published>
    <updated>2018-08-01T05:24:31.093Z</updated>
    
    <content type="html"><![CDATA[<h1 id="英语美句"><a href="#英语美句" class="headerlink" title="英语美句"></a>英语美句</h1><h2 id="每天收集一些精美的英语小句子，慢慢提升英语爱好。"><a href="#每天收集一些精美的英语小句子，慢慢提升英语爱好。" class="headerlink" title="每天收集一些精美的英语小句子，慢慢提升英语爱好。"></a>每天收集一些精美的英语小句子，慢慢提升英语爱好。</h2><ul><li><p>赠人玫瑰，手有余香。<br>  Give a person a rose and keep his hand in the rost. </p></li><li><p>两颗相爱的心之间不需要言语。<br>  No words are necessary between two loving hearts.</p></li></ul>]]></content>
    
    <summary type="html">
    
      每天收集一些精美的英语小句子，慢慢提升英语爱好。
    
    </summary>
    
      <category term="英语学习" scheme="http://yoursite.com/categories/%E8%8B%B1%E8%AF%AD%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="英语" scheme="http://yoursite.com/tags/%E8%8B%B1%E8%AF%AD/"/>
    
      <category term="学习" scheme="http://yoursite.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>iOS 10.3 UILabel 中划线无效</title>
    <link href="http://yoursite.com/2018/05/15/iOS%2010%20%E9%80%82%E9%85%8D%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/iOS%2010.3%20UILabel%20%E5%88%A0%E9%99%A4%E7%BA%BF%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2018/05/15/iOS 10 适配问题汇总/iOS 10.3 UILabel 删除线问题/</id>
    <published>2018-05-15T13:36:43.000Z</published>
    <updated>2018-08-01T12:05:55.914Z</updated>
    
    <content type="html"><![CDATA[<h2 id="在iOS10-3系统-给-UILabel-添加中划线失效"><a href="#在iOS10-3系统-给-UILabel-添加中划线失效" class="headerlink" title="在iOS10.3系统 给 UILabel 添加中划线失效"></a>在iOS10.3系统 给 UILabel 添加中划线失效</h2><h3 id="通常使用的代码为"><a href="#通常使用的代码为" class="headerlink" title="通常使用的代码为"></a>通常使用的代码为</h3><pre><code>- (NSMutableAttributedString *)setUnderlineStyle {// 此方法为我们常用的方法[self setAttributes:@{NSStrikethroughStyleAttributeName: [NSNumber numberWithInteger:NSUnderlineStyleSingle]} range:NSMakeRange(0, self.length)];return self;}</code></pre><p>###以下代码将一举解决 iOS10.3 中划线不生效的系统bug</p><pre><code>- (NSMutableAttributedString *)setUnderlineStyle {    // 此 一举解决 iOS 10.3 不显示删除线的系统bug    [self setAttributes:@{NSStrikethroughStyleAttributeName: [NSNumber numberWithInteger:NSUnderlineStyleSingle],NSBaselineOffsetAttributeName : @(NSUnderlineStyleSingle)} range:NSMakeRange(0, self.length)];    return self; }</code></pre>]]></content>
    
    <summary type="html">
    
      在iOS10.3系统 给 UILabel 添加中划线失效
    
    </summary>
    
      <category term="编程" scheme="http://yoursite.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="iOS开发" scheme="http://yoursite.com/tags/iOS%E5%BC%80%E5%8F%91/"/>
    
      <category term="iOS 10.3 代码适配问题" scheme="http://yoursite.com/tags/iOS-10-3-%E4%BB%A3%E7%A0%81%E9%80%82%E9%85%8D%E9%97%AE%E9%A2%98/"/>
    
      <category term="NSString" scheme="http://yoursite.com/tags/NSString/"/>
    
      <category term="UILabel" scheme="http://yoursite.com/tags/UILabel/"/>
    
  </entry>
  
  <entry>
    <title>人民币货币符号与价格之间的空格</title>
    <link href="http://yoursite.com/2018/05/15/iOS%E9%80%82%E9%85%8D%E5%B0%8F%E4%BC%98%E5%8C%96/iOS%E9%80%82%E9%85%8D%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2018/05/15/iOS适配小优化/iOS适配问题/</id>
    <published>2018-05-15T13:14:43.000Z</published>
    <updated>2018-05-15T14:42:49.361Z</updated>
    
    <content type="html"><![CDATA[<h2 id="iOS-9系统下-“人民币的特殊性”"><a href="#iOS-9系统下-“人民币的特殊性”" class="headerlink" title="iOS 9系统下 “人民币的特殊性”"></a>iOS 9系统下 “人民币的特殊性”</h2><pre><code>NSString * string = @&quot;9999&quot;;NSNumberFormatter *moneyFormatter = [[NSNumberFormatter alloc] init];moneyFormatter.numberStyle = kCFNumberFormatterCurrencyStyle;NSString *priceString = [moneyFormatter stringFromNumber:[NSNumber numberWithDouble:[string doubleValue]]];NSMutableString *priceMstr = [NSMutableString stringWithFormat:@&quot;%@&quot;,priceString];NSLog(@&quot;%@&quot;,priceMstr);</code></pre><p> 其输出结果为 “￥ 9,999.00” ，而不是我们预期的 “￥9,999.00”。</p><pre><code> ￥ 与 &quot;9,999.00&quot; 之间的空白地带，是无法用替换空格的方式直接消除的的。 即使用如下方法将不起作用 NSRange range = [priceMstr rangeOfString:@&quot; &quot;]; if (range.location != NSNotFound) {    [priceMstr replaceCharactersInRange:range withString:@&quot;&quot;];}</code></pre><p>看来它是一个特殊的字符那么我们不得不采用其他的办法来处理。</p><p>添加如下代码即可处理掉人民币货币符号 与 价格之间的空格:</p><pre><code>[priceMstr stringByTrimmingCharactersInSet:[NSCharacterSet whitespaceCharacterSet]];</code></pre>]]></content>
    
    <summary type="html">
    
      人民币是一种特殊的货币吗？答案是：是的。当使用系统自带方法，给货币自动添加货币符号，以及价格千分位之后，在iOS 9系统上，如果货币为人民币，人民币会与其他货币符号产生不一样的输出效果，即人民币符号&quot;￥&quot;与价格之间会有一个空白间距。
    
    </summary>
    
      <category term="编程" scheme="http://yoursite.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="iOS开发" scheme="http://yoursite.com/tags/iOS%E5%BC%80%E5%8F%91/"/>
    
      <category term="NSString" scheme="http://yoursite.com/tags/NSString/"/>
    
      <category term="小优化" scheme="http://yoursite.com/tags/%E5%B0%8F%E4%BC%98%E5%8C%96/"/>
    
      <category term="kCFNumberFormatterCurrencyStyle" scheme="http://yoursite.com/tags/kCFNumberFormatterCurrencyStyle/"/>
    
  </entry>
  
  <entry>
    <title>用CollectionView实现环形布局</title>
    <link href="http://yoursite.com/2018/05/10/CollectionView/CollectionView%E5%AE%9E%E7%8E%B0%E7%8E%AF%E5%BD%A2%E5%B8%83%E5%B1%80/"/>
    <id>http://yoursite.com/2018/05/10/CollectionView/CollectionView实现环形布局/</id>
    <published>2018-05-09T17:08:43.000Z</published>
    <updated>2018-05-11T05:36:00.676Z</updated>
    
    <content type="html"><![CDATA[<h2 id="XFCyclicAnnularFlowLayout"><a href="#XFCyclicAnnularFlowLayout" class="headerlink" title="XFCyclicAnnularFlowLayout"></a>XFCyclicAnnularFlowLayout</h2><h3 id="CollectionView-实现扇形（环形）布局"><a href="#CollectionView-实现扇形（环形）布局" class="headerlink" title="CollectionView 实现扇形（环形）布局"></a>CollectionView 实现扇形（环形）布局</h3><font color="green" size="4.5"><strong>功能设置</strong></font><ul><li><p>1.设置有多少层扇形（环形）</p></li><li><p>2.设置该层有多少元素</p></li><li><p>3.设置元素大小Size</p></li><li><p>4.设置该层环绕的半径</p></li><li><p>5.设置该层扇形的展开弧度</p></li><li><p>6.设置所有元素的朝向</p><ul><li><font color="#660000">朝上（默认）</font><br></li><li><font color="#660000">朝下</font><br></li><li><font color="#660000">朝里（头部指向圆心）</font><br></li><li><font color="#660000">朝外（头部与环形法线方向一致）</font><br></li></ul></li><li><p>7.设置该层环形中所有元素是否顺时针排布</p><ul><li><font color="#660000">默认是顺时针排布</font><br></li></ul></li></ul><font color="green" ,="" size="4.5"><strong>API说明</strong></font><ul><li><p><strong>当前组的扇形（环形）半径</strong></p><ul><li><p>- (CGFloat)flowLayout:(XFCyclicAnnularFlowLayout *)flowLayout cyclicAnnularRadiusInSection:(NSInteger)section;</p></li><li><p>返回参数类型值说明如下：</p><pre><code>CGFloat 返回当前组扇形（环形）的半径 (单位: π)</code></pre></li></ul></li><li><p><strong>当前位置Cell的大小（size）</strong></p><ul><li><p>- (CGSize)flowLayout:(XFCyclicAnnularFlowLayout *)flowLayout cyclicAnnularItemSizeAtindexPath:(NSIndexPath *)indexPath;</p></li><li><p>返回参数类型值说明如下：</p><pre><code>CGSize  返回当前位置（indexPath）cell的大小</code></pre></li></ul></li></ul><ul><li><p><strong>当前组的弧度范围（即该组展开弧度）</strong></p><ul><li><p>- (CGFloat)flowLayout:(XFCyclicAnnularFlowLayout *)flowLayout cyclicAnnularRadianInSection:(NSInteger)section;</p></li><li><p>返回参数类型值说明如下：</p><pre><code>CGFloat  返回当前组元素在视图上展开的弧度范围</code></pre></li></ul></li><li><p><strong>该组元素在扇形区域内是否顺时针展开</strong></p><ul><li>- (BOOL )flowLayout:(XFCyclicAnnularFlowLayout*)flowLayout cyclicIsClockwiseInSection:(NSInteger)section;</li></ul></li><li><p>返回参数类型值说明如下：</p><pre><code>BOOL  该返回值设定视图当前环形中cell是顺时针依次排列，还是逆时针依次排列，默认是顺时针</code></pre></li><li><p><strong>元素朝向</strong></p><ul><li><p>- (XFCyclicAnnularItemOrientation )cyclicAnnularItemOrientationInFlowLayout:(XFCyclicAnnularFlowLayout *)flowLyout;</p></li><li><p>返回参数类型值说明如下：</p></li></ul></li></ul><pre><code>typedef NS_ENUM(NSUInteger, XFCyclicAnnularItemOrientation) {    XFCyclicAnnularItemOrientationUp,           // 朝上 默认    XFCyclicAnnularItemOrientationDown,         // 朝下    XFCyclicAnnularItemOrientationInside,       // 朝内    XFCyclicAnnularItemOrientationOutside       // 朝外};</code></pre>]]></content>
    
    <summary type="html">
    
      用很多时候,项目中会出现一系列元素排布在一系列圆环至上,该文章将给到一个用UIColectionView来实现该需求的基本思路,该方案API简单易理解,使用方便。
    
    </summary>
    
      <category term="编程" scheme="http://yoursite.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="iOS开发" scheme="http://yoursite.com/tags/iOS%E5%BC%80%E5%8F%91/"/>
    
      <category term="环形布局" scheme="http://yoursite.com/tags/%E7%8E%AF%E5%BD%A2%E5%B8%83%E5%B1%80/"/>
    
      <category term="UICollectionView" scheme="http://yoursite.com/tags/UICollectionView/"/>
    
      <category term="UICollectionViewFlowLayout" scheme="http://yoursite.com/tags/UICollectionViewFlowLayout/"/>
    
  </entry>
  
  <entry>
    <title>程序员应该知道自己要做什么</title>
    <link href="http://yoursite.com/2017/07/16/H.264/%E7%A8%8B%E5%BA%8F%E4%BA%BA%E7%94%9F/"/>
    <id>http://yoursite.com/2017/07/16/H.264/程序人生/</id>
    <published>2017-07-16T12:33:43.000Z</published>
    <updated>2018-05-15T13:52:14.000Z</updated>
    
    <content type="html"><![CDATA[<p>写在这里，告诉自己，职业人生应该是有一定自我主动权的。</p><p>不要因为工作放弃自己曾经那份充满热爱的感觉。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;写在这里，告诉自己，职业人生应该是有一定自我主动权的。&lt;/p&gt;
&lt;p&gt;不要因为工作放弃自己曾经那份充满热爱的感觉。&lt;/p&gt;

      
    
    </summary>
    
    
  </entry>
  
</feed>
