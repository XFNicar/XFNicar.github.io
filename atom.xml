<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>YanYi&#39;s Blog</title>
  
  <subtitle>猴子每天都会爬树摘果子，猴子不再爬树了，可能是树上没果子了，也可能猴子已经不再是猴子。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-05-09T17:02:27.454Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>YanYi</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>用CollectionView实现环形布局</title>
    <link href="http://yoursite.com/2017/07/16/CollectionView/CollectionView%E5%AE%9E%E7%8E%B0%E7%8E%AF%E5%BD%A2%E5%B8%83%E5%B1%80/"/>
    <id>http://yoursite.com/2017/07/16/CollectionView/CollectionView实现环形布局/</id>
    <published>2017-07-16T12:33:43.000Z</published>
    <updated>2018-05-09T17:02:27.454Z</updated>
    
    <content type="html"><![CDATA[<h1 id="XFCyclicAnnularFlowLayout"><a href="#XFCyclicAnnularFlowLayout" class="headerlink" title="XFCyclicAnnularFlowLayout"></a>XFCyclicAnnularFlowLayout</h1><h2 id="CollectionView-实现扇形（环形）布局"><a href="#CollectionView-实现扇形（环形）布局" class="headerlink" title="CollectionView 实现扇形（环形）布局"></a>CollectionView 实现扇形（环形）布局</h2><font color="green" size="4.5"><strong>功能设置</strong></font><ul><li><p>1.设置有多少层扇形（环形）</p></li><li><p>2.设置该层有多少元素</p></li><li><p>3.设置元素大小Size</p></li><li><p>4.设置该层环绕的半径</p></li><li><p>5.设置该层扇形的展开弧度</p></li><li><p>6.设置所有元素的朝向</p><ul><li><font color="#660000">朝上（默认）</font><br></li><li><font color="#660000">朝下</font><br></li><li><font color="#660000">朝里（头部指向圆心）</font><br></li><li><font color="#660000">朝外（头部与环形法线方向一致）</font><br></li></ul></li><li><p>7.设置该层环形中所有元素是否顺时针排布</p><ul><li><font color="#660000">默认是顺时针排布</font><br></li></ul></li></ul><font color="green" ,="" size="4.5"><strong>API说明</strong></font><ul><li><font color="red" ,="" size="3"><strong>当前组的扇形（环形）半径</strong></font><ul><li><p><font color="#006666"><strong>- (<font color="#0000dd"> CGFloat </font> )flowLayout:(XFCyclicAnnularFlowLayout *)flowLayout cyclicAnnularRadiusInSection:(NSInteger)section;</strong></font><br></p><ul><li><p>返回参数类型值说明如下：</p><pre><code>CGFloat 返回当前组扇形（环形）的半径 (单位: π)</code></pre></li></ul></li></ul></li><li><font color="red" ,="" size="3"><strong>当前位置Cell的大小（size）</strong></font><ul><li><p><font color="#006666"><strong>- (<font color="#0000dd">CGSize </font> )flowLayout:(XFCyclicAnnularFlowLayout <em>)flowLayout cyclicAnnularItemSizeAtindexPath:(NSIndexPath </em>)indexPath;</strong></font><br></p><ul><li><p>返回参数类型值说明如下：</p><pre><code>CGSize  返回当前位置（indexPath）cell的大小</code></pre></li></ul></li></ul></li></ul><ul><li><font color="red" ,="" size="3"><strong>当前组的弧度范围（即该组展开弧度）</strong></font><ul><li><p><font color="#006666"><strong>- (<font color="#0000dd">CGFloat </font>)flowLayout:(XFCyclicAnnularFlowLayout *)flowLayout cyclicAnnularRadianInSection:(NSInteger)section;</strong></font><br></p><ul><li><p>返回参数类型值说明如下：</p><pre><code>CGFloat  返回当前组元素在视图上展开的弧度范围</code></pre></li></ul></li></ul></li><li><font color="red" ,="" size="3"><strong>该组元素在扇形区域内是否顺时针展开</strong></font><ul><li><p><font color="#006666"><strong>- (<font color="#0000dd"> BOOL </font>)flowLayout:(XFCyclicAnnularFlowLayout*)flowLayout cyclicIsClockwiseInSection:(NSInteger)section;</strong></font><br></p><ul><li><p>返回参数类型值说明如下：</p><pre><code>BOOL  该返回值设定视图当前环形中cell是顺时针依次排列，还是逆时针依次排列，默认是顺时针</code></pre></li></ul></li></ul></li><li><font color="red" ,="" size="3"><strong>元素朝向</strong></font><ul><li><p><font color="#006666"><strong>- (<font color="#0000dd">XFCyclicAnnularItemOrientation</font> )cyclicAnnularItemOrientationInFlowLayout:(XFCyclicAnnularFlowLayout *)flowLyout;</strong></font><br></p><ul><li>返回参数类型值说明如下：</li></ul></li></ul></li></ul><pre><code>typedef NS_ENUM(NSUInteger, XFCyclicAnnularItemOrientation) {    XFCyclicAnnularItemOrientationUp,           // 朝上 默认    XFCyclicAnnularItemOrientationDown,         // 朝下    XFCyclicAnnularItemOrientationInside,       // 朝内    XFCyclicAnnularItemOrientationOutside       // 朝外};</code></pre>]]></content>
    
    <summary type="html">
    
      用很多时候,项目中会出现一系列元素排布在一系列圆环至上,该文章将给到一个用UIColectionView来实现该需求的基本思路,该方案API简单易理解,使用方便。
    
    </summary>
    
      <category term="编程" scheme="http://yoursite.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="iOS开发" scheme="http://yoursite.com/tags/iOS%E5%BC%80%E5%8F%91/"/>
    
      <category term="环形布局" scheme="http://yoursite.com/tags/%E7%8E%AF%E5%BD%A2%E5%B8%83%E5%B1%80/"/>
    
      <category term="UICollectionView" scheme="http://yoursite.com/tags/UICollectionView/"/>
    
      <category term="UICollectionViewFlowLayout" scheme="http://yoursite.com/tags/UICollectionViewFlowLayout/"/>
    
  </entry>
  
  <entry>
    <title>程序员应该知道自己要做什么</title>
    <link href="http://yoursite.com/2017/07/16/H.264/%E8%AE%A4%E8%AF%86H.264(0x01)/"/>
    <id>http://yoursite.com/2017/07/16/H.264/认识H.264(0x01)/</id>
    <published>2017-07-16T12:33:43.000Z</published>
    <updated>2018-05-09T16:41:08.544Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
</feed>
